{"version":3,"sources":["components/Product.js","redux/constants/productConstants.js","screens/HomeScreen.js","redux/actions/productActions.js","redux/constants/cartConstants.js","redux/actions/cartActions.js","screens/ProductScreen.js","components/CartItem.js","screens/CartScreen.js","components/Navbar.js","components/SideDrawer.js","components/Backdrop.js","App.js","redux/store.js","redux/reducers/cartReducers.js","redux/reducers/productReducers.js","reportWebVitals.js","index.js"],"names":["Product","imageUrl","name","description","price","productId","className","src","alt","substring","to","GET_PRODUCT_REQUEST","GET_PRODUCT_SUCCESS","GET_PRODUCT_FAIL","GET_PRODUCT_DETAILS_REQUEST","GET_PRODUCT_DETAILS_SUCCESS","GET_PRODUCT_DETAILS_FAIL","GET_PRODUCT_DETAILS_RESET","HomeScreen","dispatch","useDispatch","getProducts","useSelector","state","products","loading","error","useEffect","a","type","actionTypes","axios","get","data","payload","response","message","map","product","_id","ADD_TO_CART","REMOVE_FROM_CART","addToCart","id","qty","getState","countInStock","localStorage","setItem","JSON","stringify","cart","cartItems","ProductScreen","useState","setQty","useParams","navigate","useNavigate","productDetails","getProductDetails","vlue","onChange","e","target","value","Array","keys","x","onClick","CartItem","item","qtyChangeHandler","removeHandler","CartScreen","removeFromCart","length","reduce","Number","Navbar","click","SideDrawer","show","sideDrawerClass","push","join","Backdrop","app","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","getAnalytics","App","sideToggle","setSideToggle","exact","path","element","reducer","combineReducers","action","existItem","find","filter","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a68cfea2.chunk.js","sourcesContent":["import './Product.css'\r\nimport {Link} from 'react-router-dom'\r\nfunction Product({imageUrl, name, description,price,productId}) {\r\n    return (\r\n        <div className=\"product\">\r\n            <img src={imageUrl} \r\n            alt={name} />\r\n\r\n            <div className=\"product__info\">\r\n                <p className=\"info__name\">\r\n                    {name}\r\n                </p>\r\n                <p className=\"info__description\">\r\n                    {description.substring(0, 100)}...\r\n                </p>\r\n                <p className=\"info__price\">\r\n                    ${price}\r\n                </p>\r\n                <Link to={`/product/${productId}`} className=\"info__button\">View</Link>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Product\r\n","export const GET_PRODUCT_REQUEST=\"GET_PRODUCT_REQUEST\";\r\nexport const GET_PRODUCT_SUCCESS=\"GET_PRODUCT_SUCCESS\";\r\nexport const GET_PRODUCT_FAIL=\"GET_PRODUCT_FAIL\";\r\n\r\nexport const GET_PRODUCT_DETAILS_REQUEST=\"GET_PRODUCT_DETAILS_REQUEST\";\r\nexport const GET_PRODUCT_DETAILS_SUCCESS=\"GET_PRODUCT_DETAILS_SUCCESS\";\r\nexport const GET_PRODUCT_DETAILS_FAIL=\"GET_PRODUCT_DETAILS_FAIL\";\r\nexport const GET_PRODUCT_DETAILS_RESET=\"GET_PRODUCT_DETAILS_RESET\";","import './HomeScreen.css';\r\nimport { useEffect } from 'react';\r\nimport {useSelector,useDispatch} from 'react-redux'\r\n\r\n//Components\r\nimport Product from '../components/Product'\r\n//Actions\r\nimport {getProducts as listProducts} from '../redux/actions/productActions'\r\n\r\nfunction HomeScreen() {\r\n\r\n    const dispatch=useDispatch();\r\n\r\n    const getProducts=useSelector(state=>state.getProducts)//chọc thẳng vào reducer\r\n     const{products,loading,error} = getProducts;\r\n\r\n     useEffect(()=>{\r\n        dispatch(listProducts())\r\n     },[dispatch])\r\n//sau bước useSelector và useDispatch thì phải vào package.json của frontend để cài 1 proxy\r\n    return (\r\n        <div className=\"homescreen\">\r\n           <h2 className=\"homescreen__title\">Latest Product</h2>\r\n           <div className=\"homescreen__products\">\r\n           {loading ? (\r\n               <h2>Loading...</h2>\r\n           ): error ? (\r\n            <h2>{error}</h2>\r\n           ):(\r\n               products.map((product) =>\r\n               <Product\r\n               key={product._id}\r\n               productId={product._id} \r\n               name={product.name}\r\n               description={product.description}\r\n               price={product.price}\r\n               imageUrl={product.imageUrl}\r\n               />)\r\n           )}\r\n           </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HomeScreen\r\n//đoạn homescreen__products lúc đầu để nhiều component là <Product /> để test giao diện\r\n//error và loading,products lấy ở dòng trên\r\n//products chính là list các sản phẩm đc tạo trong data\r\n//Hook này cho phép chúng ta lấy state từ Redux store bằng cách sử dụng một selector function làm tham số đầu vào. \r\n//Trong đoạn code phía trên bạn thấy thì mình có trả về mảng products từ store\r\n//Hook này đơn giản chỉ là return về một tham chiếu đến dispatch function từ Redux store và được sử dụng để dispatch các action\r\n//listProducts là function getProducts từ file productAction.js\r\n//products là thành phần state đến từ productReducer.js\r\n//getProducts lấy từ store.js\r\n//useDispatch biến là các action\r\n","import * as actionTypes from '../constants/productConstants';\r\nimport axios from 'axios';\r\n\r\n\r\nexport const getProducts = () => async(dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: actionTypes.GET_PRODUCT_REQUEST,\r\n        })\r\n        const {data} = await axios.get(\"/api/products\");\r\n        dispatch({\r\n            type: actionTypes.GET_PRODUCT_SUCCESS,\r\n            payload: data,\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({ \r\n            type: actionTypes.GET_PRODUCT_FAIL,\r\n            payload:error.response && error.response.data.message ? \r\n            error.response.data.message \r\n            :error.message\r\n        })\r\n    }\r\n}\r\nexport const getProductDetails = (id) => async(dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: actionTypes.GET_PRODUCT_DETAILS_REQUEST,\r\n        })\r\n        const {data} = await axios.get(`/api/products/${id}`);\r\n        dispatch({\r\n            type: actionTypes.GET_PRODUCT_DETAILS_SUCCESS,\r\n            payload: data,\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({ \r\n            type: actionTypes.GET_PRODUCT_DETAILS_FAIL,\r\n            payload:error.response && error.response.data.message ? \r\n            error.response.data.message \r\n            :error.message\r\n        })\r\n    }\r\n}\r\nexport const removeProductDetails = () =>(dispatch)=>{\r\n    dispatch({\r\n        type: actionTypes.GET_PRODUCT_DETAILS_RESET,\r\n    })\r\n}\r\n//luôn để đường dẫn là id vì đã tạo 1 routes cho nó ở routes\r\n//file action lấy được dữ liệu từ file data\r\n//details là action để xem chi tiết sp đó, dùng với ProductScreen","export const ADD_TO_CART=\"ADD_TO_CART\";\r\nexport const REMOVE_FROM_CART=\"REMOVE_FROM_CART\";\r\nexport const CART_RESET=\"CART_RESET\";\r\n//constant cùng với actions tạo thành action trong redux\r\n//Chúng ta cần một file để chứa constant, \r\n//những constant đầu tiên sẽ là những constant để giải quyết việc xác định action nào. Những constant này sẽ được sử dụng bởi cả reducer và action.","import * as actionTypes from '../constants/cartConstants';\r\nimport axios from 'axios';\r\n\r\nexport const addToCart = (id,qty) =>async (dispatch,getState)=>{\r\n    const {data} = await axios.get(`/api/products/${id}`);\r\n\r\n    dispatch({\r\n        type:actionTypes.ADD_TO_CART,\r\n        payload:{\r\n            product:data._id,\r\n            name:data.name,\r\n            imageUrl:data.imageUrl,\r\n            price:data.price,\r\n            countInStock:data.countInStock,\r\n            qty,\r\n        }\r\n    })\r\n\r\n    localStorage.setItem('cart',JSON.stringify(getState().cart.cartItems));\r\n    \r\n}\r\n//bước localStorage nhằm lưu các sản phẩm đã được thêm vào giỏ hàng ở trong bộ nhớ tạm thời\r\n//Actions đơn giản là các events. Chúng là cách mà chúng ta send data từ app đến Redux store.\r\n//Những data này có thể là từ sự tương tác của user vs app, API calls hoặc cũng có thể là từ form submission.\r\n//dispatch có thể nằm ở file store cũng được\r\n//Action: Là nơi mang các thông tin dùng để gửi từ ứng dụng đến Store. Các thông tin này là 1 object mô tả những gì đã xảy ra.\r\n//axios cho phép request api đến điểm cuối\r\n//axios.get('link api')\r\n\r\nexport const removeFromCart = (id) =>(dispatch,getState) => {\r\n    dispatch({\r\n        type: actionTypes.REMOVE_FROM_CART,\r\n        payload:id\r\n    })\r\n    localStorage.setItem('cart',JSON.stringify(getState().cart.cartItems))\r\n}","import {useState,useEffect} from 'react';\r\nimport {useDispatch,useSelector} from 'react-redux';\r\nimport { useParams } from 'react-router-dom';\r\nimport { useNavigate } from 'react-router-dom';\r\n//useParams nhằm lấy link của /product/:id của bên App.js\r\n\r\n\r\nimport './ProductScreen.css';\r\n\r\n\r\n//Actions\r\nimport {getProductDetails} from '../redux/actions/productActions';\r\nimport {addToCart} from '../redux/actions/cartActions'\r\n\r\nfunction ProductScreen() {\r\n\r\n    const[qty,setQty]=useState(1)\r\n    //set giá trị ban đầu cho số lượng của 1 sản phẩm\r\n    const dispatch=useDispatch();\r\n \r\n    let {id}=useParams();\r\n    let navigate=useNavigate();\r\n\r\n    const productDetails=useSelector(state=>state.getProductDetails);\r\n    const {loading,error,product}=productDetails;\r\n    useEffect(()=>{\r\n        if(product && id !== product._id){\r\n            dispatch(getProductDetails(id))\r\n        }\r\n    },[dispatch,product])\r\n    //nếu sản phẩm vừa được thêm vào giỏ hàng chưa có trong giỏ thì chúng ta sẽ thêm nó vào mới\r\n    const addToCartHandler = () =>{\r\n        dispatch(addToCart(product._id,qty));\r\n        navigate('/cart');\r\n    }\r\n\r\n    return (\r\n        <div className=\"productscreen\">\r\n            {loading ? <h2>Loading...</h2> : error ? <h2>{error}</h2> : (\r\n                <>\r\n                     <div className=\"productscreen__left\">\r\n                <div className=\"left__image\">\r\n                    <img src={product.imageUrl} \r\n                    alt={product.name}/>\r\n                </div>\r\n                <div className=\"left__info\">\r\n                    <p className=\"left__name\">{product.name}</p>\r\n                    <p>{product.price}</p>\r\n                    <p>{product.description}</p>\r\n                </div>\r\n            </div>\r\n            <div className=\"productscreen__right\">\r\n                <div className=\"right__info\">\r\n                    <p>\r\n                        Price:<span>${product.price}</span>\r\n                    </p>\r\n                    <p>\r\n                        Status: <span>{product.countInStock > 0 ? \"In Stock\" : \"Out of Stock\"}</span>\r\n                    </p>\r\n                    <p>\r\n                        Qty\r\n                        <select vlue={qty} onChange={(e)=>setQty(e.target.value)}>\r\n                            {[...Array(product.countInStock).keys()].map((x) =>\r\n                            (\r\n                                <option key={x+1} value={x+1}>{x+1}</option>\r\n                            ))}\r\n                        </select>\r\n                    </p>\r\n                    <p>\r\n                        <button type=\"button\" onClick={addToCartHandler}>\r\n                            Add To Cart\r\n                        </button>\r\n                    </p>\r\n                </div>\r\n            </div>\r\n                </>\r\n            )}\r\n           \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProductScreen\r\n//select để nhằm sắp xếp số option dựa theo số mặt hàng của sản phẩm đó còn trong kho\r\n//object.keys() Trả về một mảng các tên thuộc tính đếm được của một object đã cho.\r\n//có 2 cái được thay đổi trong bản cập nhật react-router-v6 là useParams và useNavigate\r\n\r\n","import './CartItem.css'\r\nimport {Link} from 'react-router-dom'\r\nfunction CartItem({item,qtyChangeHandler,removeHandler}) {\r\n    return (\r\n        <div className=\"cartitem\">\r\n            <div className=\"cartitem__image\">\r\n                <img src={item.imageUrl} \r\n                alt={item.name}/>\r\n            </div>\r\n            <Link to={`/product/${item.product}`} className=\"cartitem__name\">\r\n                <p>{item.name}</p>\r\n            </Link>\r\n            <p className=\"cartitem__price\">\r\n                ${item.price}\r\n            </p>\r\n            <select className=\"cartitem__select\" value={item.qty} onChange={(e) => qtyChangeHandler(item.product, e.target.value)}>\r\n                {[...Array(item.countInStock).keys()].map(x=>(\r\n                    <option key={x+1} value={x+1}>{x+1}</option>\r\n                ))}\r\n            </select>\r\n            <button className=\"cartitem__deleteBtn\" onClick={()=>removeHandler(item.product)}>\r\n                <i className=\"fas fa-trash\">\r\n                    \r\n                </i>\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CartItem\r\n","import './CartScreen.css'\r\nimport {useEffect} from  'react';\r\nimport {useSelector,useDispatch} from 'react-redux';\r\nimport {Link} from 'react-router-dom';\r\n//Components\r\nimport CartItem from '../components/CartItem'\r\n//Actions\r\nimport {addToCart,removeFromCart} from '../redux/actions/cartActions' \r\n\r\nfunction CartScreen() {\r\n\r\n    const dispatch =useDispatch();\r\n    const cart=useSelector(state=>state.cart)\r\n    const {cartItems} = cart;\r\n\r\n    const qtyChangeHandler= (id,qty) =>{ \r\n        dispatch(addToCart(id,qty))\r\n    }\r\n    //thay đổi số lượng sản phẩm trong giỏ hàng\r\n    const removeHandler = (id) => {\r\n        dispatch(removeFromCart(id))\r\n    }\r\n    //xóa sản phẩm khỏi giỏ hàng\r\n    const getCartCount = () =>{\r\n        return cartItems.reduce((qty,item)=>Number(item.qty)+qty,0)\r\n    }\r\n    //đếm số sản phẩm khác nhau trong giỏ hàng\r\n    const setCartSubTotals= () =>{\r\n        return cartItems.reduce((price,item)=>(item.price*item.qty)+price,0)\r\n    }\r\n    //tính số tiền phải trả\r\n    return (\r\n        <div className=\"cartscreen\">\r\n            <div className=\"cartscreen__left\">\r\n                <h2>Shopping Cart</h2>\r\n                {cartItems.length === 0 ? (\r\n                    <div>\r\n                        Your cart is empty <Link to=\"/\" >Go Back</Link>\r\n                    </div>\r\n                ):cartItems.map(item=>(\r\n                    <CartItem item={item} qtyChangeHandler={qtyChangeHandler} removeHandler={removeHandler} />\r\n                ))}\r\n            </div>\r\n            <div className='cartscreen__right'>\r\n                <div className=\"cartscreen__info\">\r\n                    <p>Subtotal ({getCartCount()}) items</p>\r\n                    <p>${setCartSubTotals()}</p>\r\n                </div>\r\n                <div>\r\n                    <button className=\"\">Process to Checkout</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CartScreen\r\n//{cartItems} = cart; hiểu cartItems chính là state mà cartReducer trả về\r\n//qtyChangeHandler là hàm để thay đổi số lượng sản phẩm trong cart\r\n","import './Navbar.css';\r\nimport {Link} from 'react-router-dom'\r\nimport {useSelector} from 'react-redux'\r\n\r\n\r\nfunction Navbar({click}) {\r\n\r\n    const cart=useSelector(state=>state.cart)\r\n    const {cartItems} = cart;\r\n    const getCartCount = () =>{\r\n        return cartItems.reduce((qty,item)=> qty + Number(item.qty),0);\r\n    }\r\n    return (\r\n        <nav className=\"navbar\">\r\n            {/* logo */}\r\n            <div className=\"navbar__logo\">\r\n                <Link to=\"/\" className=\"navbar__page\">\r\n                <h2>\r\n                    MERN Shopping Cart\r\n                </h2>\r\n                </Link>\r\n            </div>\r\n            {/* links */}\r\n            <ul className=\"navbar__links\">\r\n                <li>\r\n                    <Link to=\"/cart\" className=\"cart__link\">\r\n                       <i className=\"fas fa-shopping-cart\"></i>\r\n                       <span>\r\n                       Cart\r\n                        <span className=\"cartlogo__badge\">\r\n                            {getCartCount()}\r\n                        </span>\r\n                       </span>\r\n                        \r\n                    </Link>\r\n                </li>\r\n                <li>\r\n                    <Link to=\"/\">\r\n                        Shop\r\n                    </Link>\r\n                </li>\r\n            </ul>\r\n\r\n            {/* hamburger menu: thực chất là thanh 3 hàng ngang khi responsive trên mobile */}\r\n            <div className=\"hamburger__menu\" onClick={click}>\r\n                <div></div>\r\n                <div></div>\r\n                <div></div>\r\n\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Navbar\r\n\r\n","import './SideDrawer.css';\r\nimport {Link} from 'react-router-dom'\r\nimport {useSelector} from 'react-redux'\r\n\r\nfunction SideDrawer({show,click}) {\r\n    const sideDrawerClass = [\"sidedrawer\"]\r\n\r\n    const cart=useSelector(state=>state.cart)\r\n    const {cartItems} = cart;\r\n    const getCartCount = () =>{\r\n    return cartItems.reduce((qty,item)=> qty + Number(item.qty),0);\r\n  }\r\n\r\n    if(show) {\r\n        sideDrawerClass.push(\"show\")\r\n    }\r\n    return (\r\n        <div className={sideDrawerClass.join(\" \")}>\r\n            <ul className=\"sidedrawer__links\" onClick={click}>\r\n                <li>\r\n                    <Link to=\"/cart\">\r\n                    <i className=\"fas fa-shopping-cart\"></i>\r\n                    <span>\r\n                        Cart<span className=\"sidedrawer__cartbadge\"> {getCartCount()} </span>\r\n                    </span>\r\n                    </Link>\r\n                </li>\r\n                <li>\r\n                    <Link to=\"/\">\r\n                        Shop\r\n                    </Link>\r\n                </li>\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SideDrawer\r\n//sideDrawer là cửa sổ đc kéo ra từ bên trái khi ấn vào thanh hamburger\r\n","import './Backdrop.css'\r\n\r\nfunction Backdrop({show,click}) {\r\n    return show && (\r\n        <div className='backdrop' onClick={click}>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Backdrop\r\n//là phần còn thừa của trang chính bị làm mờ đi khi sideDrawer kéo ra","import {BrowserRouter as Router, Routes, Route} from 'react-router-dom';\n\nimport { useState } from 'react';\n\nimport './App.css';\n//Screens\nimport HomeScreen from './screens/HomeScreen';\nimport ProductScreen from './screens/ProductScreen';\nimport CartScreen from './screens/CartScreen';\n\n//Components\nimport Navbar from './components/Navbar';\nimport SideDrawer from './components/SideDrawer'\nimport Backdrop from './components/Backdrop'\n\n// Import the functions you need from the SDKs you need\nimport { initializeApp } from \"firebase/app\";\nimport { getAnalytics } from \"firebase/analytics\";\n// TODO: Add SDKs for Firebase products that you want to use\n// https://firebase.google.com/docs/web/setup#available-libraries\n\n// Your web app's Firebase configuration\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\nconst firebaseConfig = {\n  apiKey: \"AIzaSyD6j-4V3O-N2s0zgot6tPpVRAMWhXNSJCg\",\n  authDomain: \"banhang-1852e.firebaseapp.com\",\n  projectId: \"banhang-1852e\",\n  storageBucket: \"banhang-1852e.appspot.com\",\n  messagingSenderId: \"320608111125\",\n  appId: \"1:320608111125:web:8b45e06b5cce2fbb8a9c1c\",\n  measurementId: \"G-581RDDHKEJ\"\n};\n\n// Initialize Firebase\nconst app = initializeApp(firebaseConfig);\nconst analytics = getAnalytics(app);\n\n\nfunction App() {\n  \n  const[sideToggle,setSideToggle]=useState(false)\n  return (\n    <Router>\n      <Navbar click={() =>setSideToggle(true)} />\n      <SideDrawer show={sideToggle} click={() => setSideToggle(false)} />\n      <Backdrop show={sideToggle} click={() =>setSideToggle(false)}/>\n     <main>\n       <Routes>\n         <Route exact path=\"/\" element={<HomeScreen/>} />\n         <Route exact path=\"/product/:id\" element={<ProductScreen/>} />\n         <Route exact path=\"/cart\" element={<CartScreen/>} />\n       </Routes>\n     </main>\n     </Router>\n  );\n}\n\nexport default App;\n","import { createStore,combineReducers,applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\n\r\n//Reducers\r\nimport {cartReducer} from \"./reducers/cartReducers\"\r\nimport {getProductsReducer,getProductDetailsReducer} from \"./reducers/productReducers\"\r\n\r\nconst reducer=combineReducers({\r\n    cart:cartReducer,\r\n    getProducts:getProductsReducer,\r\n    getProductDetails:getProductDetailsReducer,\r\n\r\n})\r\n\r\nconst middleware=[thunk];\r\n\r\nconst store = createStore(\r\n    reducer,\r\n    composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;\r\n\r\n//kết nối redux với ứng dụng bằng cách vào file frontend/index.js\r\n//Store: Là nơi quản lý State, cho phép truy cập State qua getState(), update State qua dispatch(action), đăng kí listener qua subscribe(listener)\r\n//Root-reducer sẽ tập hợp các sub-reducers lại thông qua combineReducers() của Redux.\r\n//Chúng ta sử dụng hàm createStore() với tham số là root-reducer\r\n//thư viện middleware cho Redux, redux-thunk thư viện được giới thiệu bởi Redux và cũng là cái dễ hiểu nhất\r\n//store.getState() sẽ trả ra giá trị của state\r\n//store.dispatch() nhận về 1 gía trị cho state ở tham số\r\n//applyMiddleware là phần mềm trung gian giúp xử dụng được middleware trong redux\r\n//Redux Thunk là một Middleware cho phép bạn viết các Action trả về một function thay vì một plain javascript object bằng cách trì hoãn việc đưa action đến reducer.\r\n//Redux Thunk được sử dụng để xử lý các logic bất đồng bộ phức tạp cần truy cập đến Store hoặc đơn giản là việc lấy dữ liệu như Ajax request.\r\n//Redux Thunk cho phép trả về các Action là một function thay vì chỉ là một PJO, nó đóng vai trò là một Middleware được đặt trước thời điểm reducer nhận request để nhận biết các\r\n// action có trả về một PJO hay không, nếu đó là một PJO, Thunk sẽ chuyển action đó đến Reducer như thường lệ, nếu action trả về là một function,\r\n//Redux Thunk sẽ \"chặn\" action đó lại và đợi cho đến khi một lệnh asynchronous nào đó trong function hoàn tất và trả về kết quả (như giá trị response ở trên)","import * as actionTypes from '../constants/cartConstants'\r\n\r\n\r\nexport const cartReducer=(state={cartItems:[]},action)=>{\r\n    switch(action.type){\r\n        case actionTypes.ADD_TO_CART:\r\n            const item = action.payload;\r\n\r\n            const existItem=state.cartItems.find((x)=>\r\n                x.product===item.product\r\n            )\r\n            //check xem sản phẩm x có trùng với 1 trong số các id các sản phẩm đã tồn tại không\r\n\r\n            if (existItem){\r\n                return{\r\n                    ...state,\r\n                    cartItems:state.cartItems.map((x)=>x.product === existItem.product ? item : x)\r\n                }\r\n            }\r\n            // nếu có sau khi thực hiện action add sẽ trả lại cartItems, nếu id của x trùng với 1 sp đã có sẵn trong giỏ hàng  => x cùng loại với item sẽ trả về sp đó +1 đơn vị, \r\n            //bằng k sẽ trả về x, nghĩa là thêm x vào cartItems\r\n            else{\r\n                return{\r\n                    ...state,\r\n                    cartItems:[...state.cartItems,item]\r\n                }\r\n            }\r\n            //\r\n        case actionTypes.REMOVE_FROM_CART:\r\n            return{\r\n                ...state,\r\n                cartItems:state.cartItems.filter((x)=>x.product!==action.payload) //giữ lại những cái thỏa mãn nó khác cái được ấn nút xóa, có thể là action.payload.product????\r\n            }\r\n            \r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n//Reducers là các function nguyên thủy chúng lấy state hiện tại của app, thực hiện một action và trả về một state mới.\r\n//Những states này được lưu như những objects và chúng định rõ cách state của một ứng dụng thay đổi trong việc phản hồi một action được gửi đến store.\r\n//Là nơi xác định State thay đổi như thế nào.\r\n//Reducers là các pure function hoạt động theo nguyên lý : (state, action) => (new state)\r\n","import * as actionTypes from '../constants/productConstants';\r\n\r\nexport const getProductsReducer = (state={products:[]},action) =>{\r\n    switch(action.type){\r\n        case actionTypes.GET_PRODUCT_REQUEST:\r\n            return{\r\n                loading: true,\r\n                products: []\r\n            }\r\n        case actionTypes.GET_PRODUCT_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                products: action.payload\r\n            }\r\n        case actionTypes.GET_PRODUCT_FAIL:\r\n            return {\r\n                loading:false, \r\n                error: action.payload\r\n            }\r\n        default: \r\n        return state;\r\n    }\r\n}\r\n\r\nexport const getProductDetailsReducer =(state={product:{}},action) =>{\r\n    switch(action.type){\r\n        case actionTypes.GET_PRODUCT_DETAILS_REQUEST:\r\n            return{\r\n                loading: true,\r\n            }\r\n        case actionTypes.GET_PRODUCT_DETAILS_SUCCESS:\r\n            return{\r\n                loading: false,\r\n                product: action.payload,\r\n            }\r\n        case actionTypes.GET_PRODUCT_DETAILS_FAIL:\r\n            return{\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        case actionTypes.GET_PRODUCT_DETAILS_RESET:\r\n            return {\r\n                product:{}\r\n            }\r\n         default: return state   \r\n    }\r\n}","const reportWebVitals = onPerfEntry => {\r\n    if (onPerfEntry && onPerfEntry instanceof Function) {\r\n      import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n        getCLS(onPerfEntry);\r\n        getFID(onPerfEntry);\r\n        getFCP(onPerfEntry);\r\n        getLCP(onPerfEntry);\r\n        getTTFB(onPerfEntry);\r\n      });\r\n    }\r\n  };\r\n  \r\n  export default reportWebVitals;\r\n  ","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {Provider} from 'react-redux';// react-redux làm nhiệm vụ kết nối cho redux và react.\nimport store from './redux/store';//có thể hiểu nôm na bước này là bước kết nối từ store lên view nhưng chưa xem đc vì sẽ còn 1 bước connect nữa\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <Provider\n  store={store}\n  >\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n  </Provider>,\n  document.getElementById('root')\n);\n\n\nreportWebVitals();\n"],"sourceRoot":""}